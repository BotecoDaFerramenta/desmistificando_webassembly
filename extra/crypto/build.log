   Compiling unicode-ident v1.0.18
   Compiling proc-macro2 v1.0.101
   Compiling wasm-bindgen-shared v0.2.100
   Compiling bumpalo v3.19.0
   Compiling log v0.4.27
   Compiling wasm-bindgen v0.2.100
   Compiling typenum v1.18.0
   Compiling cfg-if v1.0.3
   Compiling once_cell v1.21.3
   Compiling version_check v0.9.5
   Compiling subtle v2.6.1
   Compiling opaque-debug v0.3.1
   Compiling base64ct v1.8.0
   Compiling generic-array v0.14.7
   Compiling quote v1.0.40
   Compiling syn v2.0.106
   Compiling block-buffer v0.10.4
   Compiling inout v0.1.4
   Compiling wasm-bindgen-backend v0.2.100
   Compiling wasm-bindgen-macro-support v0.2.100
   Compiling wasm-bindgen-macro v0.2.100
   Compiling js-sys v0.3.77
   Compiling getrandom v0.2.16
   Compiling rand_core v0.6.4
   Compiling crypto-common v0.1.6
   Compiling password-hash v0.5.0
   Compiling digest v0.10.7
   Compiling universal-hash v0.5.1
   Compiling cipher v0.4.4
   Compiling aead v0.5.2
   Compiling polyval v0.6.2
   Compiling ghash v0.5.1
   Compiling blake2 v0.10.6
   Compiling sha2 v0.10.9
   Compiling hmac v0.12.1
   Compiling ctr v0.9.2
   Compiling aes v0.8.4
   Compiling aes-gcm v0.10.3
   Compiling argon2 v0.5.3
   Compiling rust-encryption-lib v0.1.0 (/home/msratso/workspaces/BotecoDaFerramenta/desmistificando_webassembly/extra/crypto)
warning: unused import: `OsRng`
 --> src/lib.rs:3:18
  |
3 |     aead::{Aead, OsRng, Payload},
  |                  ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `PasswordHasher` and `password_hash::SaltString`
 --> src/lib.rs:6:20
  |
6 | use argon2::{self, password_hash::SaltString, Algorithm, Argon2, Params, PasswordHasher, Version};
  |                    ^^^^^^^^^^^^^^^^^^^^^^^^^                             ^^^^^^^^^^^^^^

warning: variable does not need to be mutable
  --> src/lib.rs:66:9
   |
66 |     let mut out = unsafe { std::slice::from_raw_parts_mut(out_ptr, out_len) };
   |         ----^^^
   |         |
   |         help: remove this `mut`
   |
   = note: `#[warn(unused_mut)]` on by default

warning: variable does not need to be mutable
   --> src/lib.rs:117:9
    |
117 |     let mut out = unsafe { std::slice::from_raw_parts_mut(out_ptr, out_len) };
    |         ----^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/lib.rs:159:9
    |
159 |     let mut out = unsafe { std::slice::from_raw_parts_mut(out_ptr, 32) };
    |         ----^^^
    |         |
    |         help: remove this `mut`

warning: `rust-encryption-lib` (lib) generated 5 warnings (run `cargo fix --lib -p rust-encryption-lib` to apply 5 suggestions)
    Finished `release` profile [optimized] target(s) in 5.83s
